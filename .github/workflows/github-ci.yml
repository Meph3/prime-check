name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v3

      - name: Установка зависимостей
        run: sudo apt-get update && sudo apt-get install -y curl jq dpkg-dev

      - name: Проверка наличия Dockerfile
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Ошибка: Dockerfile отсутствует!"
            exit 1
          fi

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v3

      - name: Запуск тестов
        run: chmod +x test.sh && ./test.sh

  package:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v3

      - name: Упаковка в deb-пакет
        run: chmod +x package.sh && ./package.sh

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Сборка Docker-образа
        run: |
          docker build -t meph3/prime-check:v1.0 .
          docker tag meph3/prime-check:v1.0 meph3/prime-check:latest

      - name: Проверка наличия Docker-образа
        run: docker images | grep "meph3/prime-check"

  deploy:
    needs: package
    runs-on: ubuntu-latest

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v3

      - name: Публикация Docker-образа
        run: |
          docker push meph3/prime-check:v1.0
          docker push meph3/prime-check:latest

      - name: Деплой на сервер
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
            docker pull meph3/prime-check:v1.0
            docker stop prime-check || true
            docker rm prime-check || true
            docker run -d --name prime-check meph3/prime-check:v1.0
          EOF
